/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package javaapplication1;

import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import javax.swing.AbstractAction;
import javax.swing.ActionMap;
import javax.swing.InputMap;
import javax.swing.JComponent;
import javax.swing.KeyStroke;


public class SwapInstructionDialog extends javax.swing.JDialog {

    /**
     * A return status code - returned if Cancel button has been pressed
     */
    public static final int RET_CANCEL = 0;
    /**
     * A return status code - returned if OK button has been pressed
     */
    public static final int RET_OK = 1;

    /**
     * Creates new form SwapInstructionDialog
     */
    public SwapInstructionDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

        // Close the dialog when Esc is pressed
        String cancelName = "cancel";
        InputMap inputMap = getRootPane().getInputMap(JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
        inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), cancelName);
        ActionMap actionMap = getRootPane().getActionMap();
        actionMap.put(cancelName, new AbstractAction() {
            public void actionPerformed(ActionEvent e) {
                doClose(RET_CANCEL);
            }
        });
    }

    /**
     * @return the return status of this dialog - one of RET_OK or RET_CANCEL
     */
    public int getReturnStatus() {
        return returnStatus;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        swapInstrcution_jbutton_okButton = new javax.swing.JButton();
        scrollSwap = new javax.swing.JScrollPane();
        swapInstrcution_jtextarea_textarea1 = new javax.swing.JTextArea();
        swapInstrcution_jlabel_label1 = new javax.swing.JLabel();
        scrollPowerCard1 = new javax.swing.JScrollPane();
        swapInstrcution_jtextarea_textarea2 = new javax.swing.JTextArea();
        swapInstrcution_jlabel_graphic2 = new javax.swing.JLabel();
        swapInstrcution_jlabel_graphic1 = new javax.swing.JLabel();

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        swapInstrcution_jbutton_okButton.setText("OK");
        swapInstrcution_jbutton_okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                swapInstrcution_jbutton_okButtonActionPerformed(evt);
            }
        });

        swapInstrcution_jtextarea_textarea1.setEditable(false);
        swapInstrcution_jtextarea_textarea1.setColumns(20);
        swapInstrcution_jtextarea_textarea1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        swapInstrcution_jtextarea_textarea1.setLineWrap(true);
        swapInstrcution_jtextarea_textarea1.setRows(5);
        swapInstrcution_jtextarea_textarea1.setText("You may trade one of your cards with an opponent's. Neither player may look at the card  values being swapped.");
        swapInstrcution_jtextarea_textarea1.setWrapStyleWord(true);
        scrollSwap.setViewportView(swapInstrcution_jtextarea_textarea1);

        swapInstrcution_jlabel_label1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        swapInstrcution_jlabel_label1.setText("You've Drawn a Swap Card!");

        swapInstrcution_jtextarea_textarea2.setEditable(false);
        swapInstrcution_jtextarea_textarea2.setColumns(20);
        swapInstrcution_jtextarea_textarea2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        swapInstrcution_jtextarea_textarea2.setLineWrap(true);
        swapInstrcution_jtextarea_textarea2.setRows(5);
        swapInstrcution_jtextarea_textarea2.setText("Power cards have no value and if they are in a player's hand at the end of the round. They must be swapped for the top card of the deck.");
        swapInstrcution_jtextarea_textarea2.setWrapStyleWord(true);
        scrollPowerCard1.setViewportView(swapInstrcution_jtextarea_textarea2);

        swapInstrcution_jlabel_graphic2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication1/Cards/12.png"))); // NOI18N

        swapInstrcution_jlabel_graphic1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication1/Cards/12.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(swapInstrcution_jlabel_graphic1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(scrollPowerCard1, javax.swing.GroupLayout.DEFAULT_SIZE, 272, Short.MAX_VALUE)
                            .addComponent(scrollSwap, javax.swing.GroupLayout.DEFAULT_SIZE, 272, Short.MAX_VALUE)
                            .addComponent(swapInstrcution_jbutton_okButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(swapInstrcution_jlabel_graphic2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(116, 116, 116)
                        .addComponent(swapInstrcution_jlabel_label1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(swapInstrcution_jlabel_label1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(scrollPowerCard1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(scrollSwap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(swapInstrcution_jlabel_graphic1)
                        .addComponent(swapInstrcution_jlabel_graphic2, javax.swing.GroupLayout.Alignment.TRAILING)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(swapInstrcution_jbutton_okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getRootPane().setDefaultButton(swapInstrcution_jbutton_okButton);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void swapInstrcution_jbutton_okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_swapInstrcution_jbutton_okButtonActionPerformed
        doClose(RET_OK);
    }//GEN-LAST:event_swapInstrcution_jbutton_okButtonActionPerformed
    
    /**
     * Closes the dialog
     */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        doClose(RET_CANCEL);
    }//GEN-LAST:event_closeDialog
    
    private void doClose(int retStatus) {
        returnStatus = retStatus;
        setVisible(false);
        dispose();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SwapInstructionDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SwapInstructionDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SwapInstructionDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SwapInstructionDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                SwapInstructionDialog dialog = new SwapInstructionDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane scrollPowerCard1;
    private javax.swing.JScrollPane scrollSwap;
    private javax.swing.JButton swapInstrcution_jbutton_okButton;
    private javax.swing.JLabel swapInstrcution_jlabel_graphic1;
    private javax.swing.JLabel swapInstrcution_jlabel_graphic2;
    private javax.swing.JLabel swapInstrcution_jlabel_label1;
    private javax.swing.JTextArea swapInstrcution_jtextarea_textarea1;
    private javax.swing.JTextArea swapInstrcution_jtextarea_textarea2;
    // End of variables declaration//GEN-END:variables
    private int returnStatus = RET_CANCEL;
}
