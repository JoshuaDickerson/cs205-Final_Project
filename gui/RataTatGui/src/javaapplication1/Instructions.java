/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package javaapplication1;

/**
 *
 * @author Katie
 */
public class Instructions extends javax.swing.JFrame {

    /**
     * Creates new form Instructions
     */
    public Instructions() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        instructions_jlabel_label1 = new javax.swing.JLabel();
        instructions_jbutton_play = new javax.swing.JButton();
        instructions_jlabel_label3 = new javax.swing.JLabel();
        instructions_jlabel_label4 = new javax.swing.JLabel();
        instructions_jlabel_label6_link = new javax.swing.JLabel();
        scrollGameRules = new javax.swing.JScrollPane();
        instructions_jtextarea_ta1 = new javax.swing.JTextArea();
        instructions_jcombobox_rounds = new javax.swing.JComboBox();
        instructions_jcombobox_difficulty = new javax.swing.JComboBox();
        instructions_jtextfield_p1NameInput = new javax.swing.JTextField();
        instructions_jlabel_label2 = new javax.swing.JLabel();
        instructions_jlabel_label6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        instructions_jlabel_label1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        instructions_jlabel_label1.setText("Instructions:");

        instructions_jbutton_play.setText("Play");
        instructions_jbutton_play.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                instructions_jbutton_playActionPerformed(evt);
            }
        });

        instructions_jlabel_label3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        instructions_jlabel_label3.setText("Style of Game");

        instructions_jlabel_label4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        instructions_jlabel_label4.setText("Difficulty");

        instructions_jlabel_label6_link.setText("<html><a href=\"http://www.gamewright.com/gamewright/pdfs/Rules/Rat-a-TatCat-RULES.pdf\">http://www.gamewright.com/gamewright/pdfs/Rules/Rat-a-TatCat-RULES.pdf</a>");

        instructions_jtextarea_ta1.setEditable(false);
        instructions_jtextarea_ta1.setColumns(20);
        instructions_jtextarea_ta1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        instructions_jtextarea_ta1.setLineWrap(true);
        instructions_jtextarea_ta1.setRows(5);
        instructions_jtextarea_ta1.setText("The goal is to have the lowest score at the end of the game.\n\nChoose one player to be the dealer, and a scorekeeper. The scorekeeper will record each player’s score at the end of each round of play.\n\nShuffle the deck. The player to the left of the dealer cuts the cards. \nThe dealer then deals four cards, one at a time and face down, to each player.\nThe remaining cards are placed face down, in the middle of the table, as the\ndraw pile. The top card of the draw pile is turned over to start the discard\npile. If that card is a Power card, it is placed back in the deck and another\ncard is turned over.\n\nWithout looking at his cards, each player places his or her four cards face down in a line on the table in front of them.\n\nDuring the game, players will always have their four cards face down on the\ntable. To begin the game, players peek at their two outer cards once, then\nturn them face down again. Each player now knows the point values of two of\nhis four cards and needs to remember them during the game.\nIf either of the outer cards are Power cards, the player keeps them, but they\ndo not have their powers (described below). Power cards only have their\npowers when they are drawn from the top of the draw pile.  \nThe player to the left of the dealer has the first turn, and play continues in a\nclockwise direction.\n\nFor each turn, a player may:\n\n1. Draw the top card from the discard pile. This card MUST be used to\nreplace one of her cards. The card replaced is then discarded, face up, to the\ndiscard pile.\n\n2. Draw the top card from the draw pile. A player may use it to: \n\t1. Replace one of her cards\n\t2. Peek, Swap, or Draw 2 if it is a Power card (see below)\n\t3. Discard it face up to the discard pile\n\nA player’s choice is based on remembering the values of his four face down\ncards. Keep track of what you have so you won’t accidentally replace your\nlow point cards with high point cards.\nDuring the game, when the draw pile is used up, shuffle the discard pile and\nturn it over for a new draw pile.\n\nPower cards only have their powers when you draw them from the draw pile. If a Power card is dealt to you at the beginning of the game, it cannot be used. Because Power cards have no point value, if one of them is among your cards at the end of the game, you must replace it with a card drawn from the draw pile. If a Power card is discarded, it may not be used again by any player.\n\nThere are three kinds of Power cards:\n1. Peek\n\tWhen you draw a Peek card, show it and then peek at any\n\tone of your cards. Now you will know what you have, or you\n\tcan refresh your memory if you have forgotten what you have.\n\tYour turn is over and you discard the Peek card.\n2. Swap\n\tWhen you draw a Swap card, show the Swap card and \n\tdiscard it. You may now switch any one of your cards with\n\tany card of another player (swapping is optional). Neither player \t\tcan look at either of the cards being swapped. After the swap \t\tyour turn is over.\n3. Draw 2\n\tWhen you draw a Draw 2 card, show the card and then you\n\tmay take two more turns. First you draw the next card from the\n\tdraw pile. You must decide whether to use this card and forfeit\n\tthe second turn OR discard this card and draw a second card.\n\tThis second card may be used or discarded. Your turn is then\n\tover. If either of the cards drawn are another Draw 2 card, the\n\tDraw 2 sequence starts again.\n\nEnding the Round\n\nWhen a player thinks he has the lowest score and can win the round, he or she may end the round by knocking on the table and saying “rat-a-tat cat” at\nthe end of their turn. Once they knock, every other player has one more turn.\nEach player then turns over their cards. Players replace all Power cards by\ndrawing from the draw pile. If another Power card is drawn, the player\ndraws again.\n\nScoring\n\nPlayers add the point values of their four cards. This is each player’s score\nfor the round. The scorekeeper records each player’s score. Remember that\nplayers are trying to get as low a score as possible.\n\nNext Rounds\n\nAll cards are collected and passed to the player to the left of the dealer who\nreshuffles and deals for the next round.\n\nEnding the Game\n\nThe player with the lowest total score at the end of the game is the winner.\n\nA game may be played three ways:\n1. Play for a certain number of rounds.\n2. Play for a specific length of time.\n3. Play to stay in the game and not reach 100 points. When a player \nreaches 100 points, he is out of the game. The last player in the game is \nthe winner. Players may also choose to play to 200, or any other number \nof points.");
        instructions_jtextarea_ta1.setWrapStyleWord(true);
        scrollGameRules.setViewportView(instructions_jtextarea_ta1);

        instructions_jcombobox_rounds.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Rounds", "Time", "Points" }));
        instructions_jcombobox_rounds.setToolTipText("");
        instructions_jcombobox_rounds.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                instructions_jcombobox_roundsActionPerformed(evt);
            }
        });

        instructions_jcombobox_difficulty.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Easy", "Medium", "Hard" }));
        instructions_jcombobox_difficulty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                instructions_jcombobox_difficultyActionPerformed(evt);
            }
        });

        instructions_jtextfield_p1NameInput.setText("name here");
        instructions_jtextfield_p1NameInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                instructions_jtextfield_p1NameInputActionPerformed(evt);
            }
        });

        instructions_jlabel_label2.setText("Player 1 Name");

        instructions_jlabel_label6.setText("For More Game Rules See:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(instructions_jlabel_label6_link, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(instructions_jlabel_label6)
                    .addComponent(instructions_jlabel_label1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(scrollGameRules, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(instructions_jtextfield_p1NameInput)
                            .addComponent(instructions_jlabel_label2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(instructions_jlabel_label3)
                            .addComponent(instructions_jlabel_label4)
                            .addComponent(instructions_jbutton_play, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE)
                            .addComponent(instructions_jcombobox_rounds, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(instructions_jcombobox_difficulty, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(instructions_jlabel_label1)
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(instructions_jlabel_label2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(instructions_jtextfield_p1NameInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(55, 55, 55)
                        .addComponent(instructions_jlabel_label3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(instructions_jcombobox_rounds, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24)
                        .addComponent(instructions_jlabel_label4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(instructions_jcombobox_difficulty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(instructions_jbutton_play, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(scrollGameRules, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(instructions_jlabel_label6, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(instructions_jlabel_label6_link, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void instructions_jbutton_playActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_instructions_jbutton_playActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_instructions_jbutton_playActionPerformed

    private void instructions_jcombobox_difficultyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_instructions_jcombobox_difficultyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_instructions_jcombobox_difficultyActionPerformed

    private void instructions_jcombobox_roundsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_instructions_jcombobox_roundsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_instructions_jcombobox_roundsActionPerformed

    private void instructions_jtextfield_p1NameInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_instructions_jtextfield_p1NameInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_instructions_jtextfield_p1NameInputActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Instructions.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Instructions.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Instructions.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Instructions.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Instructions().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton instructions_jbutton_play;
    private javax.swing.JComboBox instructions_jcombobox_difficulty;
    private javax.swing.JComboBox instructions_jcombobox_rounds;
    private javax.swing.JLabel instructions_jlabel_label1;
    private javax.swing.JLabel instructions_jlabel_label2;
    private javax.swing.JLabel instructions_jlabel_label3;
    private javax.swing.JLabel instructions_jlabel_label4;
    private javax.swing.JLabel instructions_jlabel_label6;
    private javax.swing.JLabel instructions_jlabel_label6_link;
    private javax.swing.JTextArea instructions_jtextarea_ta1;
    private javax.swing.JTextField instructions_jtextfield_p1NameInput;
    private javax.swing.JScrollPane scrollGameRules;
    // End of variables declaration//GEN-END:variables
}
